{"ast":null,"code":"var _jsxFileName = \"D:\\\\IJ working directory\\\\IdeaProjects\\\\table_and_booking\\\\src\\\\components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport AddTable from \"./AddTable\";\nimport RenderTables from \"./RenderTables\";\nimport TableDetail from \"./TableDetail\";\nimport TableSettings from \"./TableSettings\";\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chartType: 'tables',\n      tables: [],\n      curTableId: -1\n    };\n\n    this.addATable = () => {\n      this.setState({\n        chartType: 'addNew'\n      });\n    };\n\n    this.checkTable = info => {\n      console.log(info.id);\n      this.setState({\n        chartType: 'tableDetail',\n        curTableId: info.id\n      });\n    };\n\n    this.handleTableInfo = info => {\n      if (info.isCancel) {\n        this.setState({\n          chartType: 'tables'\n        });\n      } else if (info.chartType === 'addNew') {\n        let prevTables = this.state.tables;\n\n        if (!info.tableId) {\n          prevTables.push({\n            capacity: info.capacity,\n            length: info.length,\n            width: info.width\n          });\n        } else {\n          prevTables[info.tableId] = {\n            capacity: info.capacity,\n            length: info.length,\n            width: info.width\n          };\n        }\n\n        this.setState({\n          chartType: 'tables',\n          tables: prevTables\n        });\n        console.log(this.state.tables);\n      } else if (info.chartType === 'tableSettings') {\n        this.setState({\n          chartType: 'tableSettings',\n          curTableId: info.tableId\n        });\n      } else if (info.chartType === 'removeTable') {\n        let prevTables = this.state.tables;\n        prevTables.splice(info.tableId, 1);\n        console.log(prevTables);\n        this.setState({\n          chartType: 'tables',\n          tables: prevTables\n        });\n      }\n    };\n  }\n\n  render() {\n    let theView;\n\n    if (this.state.chartType === 'tables') {\n      theView = /*#__PURE__*/React.createElement(RenderTables, {\n        onCheckTableInfo: this.checkTable,\n        tablesToRender: this.state.tables,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 23\n        }\n      });\n    } else if (this.state.chartType === 'addNew') {\n      theView = /*#__PURE__*/React.createElement(AddTable, {\n        onSelectTableInfo: this.handleTableInfo,\n        theTableId: this.state.tables.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 24\n        }\n      });\n    } else if (this.state.chartType === 'tableDetail') {\n      let curTableId = this.state.tables.curTableId;\n      theView = curTableId === -1 ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 43\n        }\n      }) : /*#__PURE__*/React.createElement(TableDetail, {\n        theTable: this.state.tables[curTableId],\n        theTableId: this.state.curTableId,\n        onSelectTableInfo: this.handleTableInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }\n      });\n    } else if (this.state.chartType === 'tableSettings') {\n      let curTableId = this.state.tables.curTableId;\n      theView = /*#__PURE__*/React.createElement(TableSettings, {\n        theTable: this.state.tables[curTableId],\n        theTableId: this.state.curTableId,\n        onSelectTableInfo: this.handleTableInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 23\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, \"Dine in\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addATable,\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, \"Add Table\")), theView);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["D:/IJ working directory/IdeaProjects/table_and_booking/src/components/Main.js"],"names":["React","Component","AddTable","RenderTables","TableDetail","TableSettings","Main","state","chartType","tables","curTableId","addATable","setState","checkTable","info","console","log","id","handleTableInfo","isCancel","prevTables","tableId","push","capacity","length","width","splice","render","theView"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport AddTable from \"./AddTable\"\r\nimport RenderTables from \"./RenderTables\"\r\nimport TableDetail from \"./TableDetail\"\r\nimport TableSettings from \"./TableSettings\"\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        chartType: 'tables',\r\n        tables: [],\r\n        curTableId: -1,\r\n    }\r\n\r\n    addATable = () => {\r\n        this.setState({\r\n            chartType: 'addNew',\r\n        });\r\n    }\r\n\r\n    checkTable = (info) => {\r\n        console.log(info.id);\r\n        this.setState({\r\n           chartType: 'tableDetail',\r\n            curTableId: info.id,\r\n        });\r\n    }\r\n\r\n    handleTableInfo = info => {\r\n        if (info.isCancel) {\r\n            this.setState({\r\n                chartType: 'tables',\r\n            });\r\n        } else if(info.chartType === 'addNew') {\r\n            let prevTables = this.state.tables;\r\n            if (!info.tableId) {\r\n                prevTables.push({\r\n                    capacity: info.capacity,\r\n                    length: info.length,\r\n                    width: info.width,\r\n                    }, );\r\n            } else {\r\n                prevTables[info.tableId] = {\r\n                    capacity: info.capacity,\r\n                    length: info.length,\r\n                    width: info.width,\r\n                };\r\n            }\r\n\r\n            this.setState({\r\n                chartType: 'tables',\r\n                tables: prevTables,\r\n            });\r\n            console.log(this.state.tables);\r\n        } else if (info.chartType === 'tableSettings') {\r\n            this.setState({\r\n                chartType: 'tableSettings',\r\n                curTableId: info.tableId,\r\n            });\r\n        } else if (info.chartType === 'removeTable') {\r\n            let prevTables = this.state.tables;\r\n            prevTables.splice(info.tableId, 1);\r\n            console.log(prevTables);\r\n            this.setState({\r\n                chartType: 'tables',\r\n                tables: prevTables,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let theView;\r\n        if (this.state.chartType === 'tables') {\r\n            theView = <RenderTables\r\n                        onCheckTableInfo={this.checkTable}\r\n                        tablesToRender={this.state.tables}/>;\r\n        } else if (this.state.chartType === 'addNew') {\r\n            theView =  <AddTable\r\n                        onSelectTableInfo={this.handleTableInfo}\r\n                        theTableId={this.state.tables.length}/>;\r\n        } else if (this.state.chartType === 'tableDetail') {\r\n            let curTableId = this.state.tables.curTableId;\r\n            theView = curTableId === -1 ? <div/>\r\n                : <TableDetail\r\n                    theTable={this.state.tables[curTableId]}\r\n                    theTableId={this.state.curTableId}\r\n                    onSelectTableInfo={this.handleTableInfo}/>;\r\n        } else if (this.state.chartType === 'tableSettings') {\r\n            let curTableId = this.state.tables.curTableId;\r\n            theView = <TableSettings\r\n                theTable={this.state.tables[curTableId]}\r\n                theTableId={this.state.curTableId}\r\n                onSelectTableInfo={this.handleTableInfo}/>\r\n        }\r\n        return (\r\n            <div className={\"main-container\"}>\r\n\r\n                <div className={\"tabs\"}>\r\n                    <h3 className={\"tab\"}>Dine in</h3>\r\n                </div>\r\n\r\n                <div>\r\n                    <button onClick={this.addATable}\r\n                            className={\"button\"}>\r\n                        Add Table\r\n                    </button>\r\n                </div>\r\n\r\n                {theView}\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}