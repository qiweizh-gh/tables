{"ast":null,"code":"var _jsxFileName = \"D:\\\\IJ working directory\\\\IdeaProjects\\\\table_and_booking\\\\src\\\\components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tab from \"./Tab\";\nimport AddTable from \"./AddTable\";\nimport RenderTables from \"./RenderTables\";\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chartType: 'tables',\n      numExistingTables: 0,\n      tables: []\n    };\n\n    this.addATable = () => {\n      this.setState({\n        chartType: 'addNew'\n      });\n    };\n\n    this.checkTable = info => {\n      this.setState({\n        chartType: 'tableDetail',\n        tables: [{\n          tableId: info.id,\n          table: [{//read data from database\n          }]\n        }]\n      });\n    };\n\n    this.handleTableInfo = info => {\n      if (info.isCancel) {\n        this.setState({\n          chartType: 'tables'\n        });\n      } else {\n        this.setState({\n          chartType: 'tables',\n          numExistingTables: 0,\n          tables: this.state.tables.length === 0 ? [{\n            capacity: info.capacity,\n            length: info.length,\n            width: info.width\n          }] : [this.state.tables, {\n            capacity: info.capacity,\n            length: info.length,\n            width: info.width\n          }]\n        }); // console.log(this.state.tables);\n      }\n    };\n  }\n\n  render() {\n    let theView;\n\n    if (this.state.chartType === 'tables') {\n      theView = /*#__PURE__*/React.createElement(RenderTables, {\n        onCheckTableInfo: this.checkTable,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 23\n        }\n      });\n    } else if (this.state.chartType === 'addNew') {\n      theView = /*#__PURE__*/React.createElement(AddTable, {\n        onSelectTableInfo: this.handleTableInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 24\n        }\n      });\n    } else {\n      theView = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 24\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, \"Dine in\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addATable,\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"Add Table\")), theView);\n  }\n\n}\n\nMain.propTypes = {};\nexport default Main;","map":{"version":3,"sources":["D:/IJ working directory/IdeaProjects/table_and_booking/src/components/Main.js"],"names":["React","Component","PropTypes","Tab","AddTable","RenderTables","Main","state","chartType","numExistingTables","tables","addATable","setState","checkTable","info","tableId","id","table","handleTableInfo","isCancel","length","capacity","width","render","theView","propTypes"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tab from \"./Tab\"\r\nimport AddTable from \"./AddTable\"\r\nimport RenderTables from \"./RenderTables\"\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        chartType: 'tables',\r\n        numExistingTables: 0,\r\n        tables: [],\r\n    }\r\n\r\n    addATable = () => {\r\n        this.setState({\r\n            chartType: 'addNew',\r\n        });\r\n    }\r\n\r\n    checkTable = (info) => {\r\n\r\n        this.setState({\r\n           chartType: 'tableDetail',\r\n           tables: [{\r\n               tableId: info.id,\r\n               table: [{\r\n                   //read data from database\r\n               }],\r\n           }]\r\n        });\r\n    }\r\n\r\n    handleTableInfo = info => {\r\n        if (info.isCancel) {\r\n            this.setState({\r\n                chartType: 'tables',\r\n            });\r\n        } else {\r\n            this.setState({\r\n                chartType: 'tables',\r\n                numExistingTables: 0,\r\n                tables: this.state.tables.length === 0 ? [\r\n                    {\r\n                        capacity: info.capacity,\r\n                        length: info.length,\r\n                        width: info.width,\r\n                    }\r\n                ] : [\r\n                    this.state.tables,\r\n                    {\r\n                        capacity: info.capacity,\r\n                        length: info.length,\r\n                        width: info.width,\r\n                    }\r\n                ],\r\n            });\r\n            // console.log(this.state.tables);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let theView;\r\n        if (this.state.chartType === 'tables') {\r\n            theView = <RenderTables onCheckTableInfo={this.checkTable}/>;\r\n        } else if (this.state.chartType === 'addNew') {\r\n            theView =  <AddTable onSelectTableInfo={this.handleTableInfo}/>;\r\n        } else {\r\n            theView =  <div></div>;\r\n        }\r\n        return (\r\n            <div className={\"main-container\"}>\r\n\r\n                <div className={\"tabs\"}>\r\n                    <p className={\"tab\"}>Dine in</p>\r\n                </div>\r\n\r\n                <div>\r\n                    <button onClick={this.addATable}\r\n                            className={\"button\"}>\r\n                        Add Table\r\n                    </button>\r\n                </div>\r\n\r\n                {theView}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nMain.propTypes = {};\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}