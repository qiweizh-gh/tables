{"ast":null,"code":"var _jsxFileName = \"D:\\\\IJ working directory\\\\IdeaProjects\\\\table_and_booking\\\\src\\\\components\\\\TableSettings.js\";\nimport React, { PureComponent } from 'react';\nimport { Icon } from \"antd\";\nimport NumericInput from \"react-numeric-input\";\n\nclass TableSettings extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      capacity: this.props.theTable.capacity,\n      length: this.props.theTable.length,\n      width: this.props.theTable.width\n    };\n\n    this.handleTableInfo = type => {\n      if (type === 'tables') {\n        this.props.onSelectTableInfo({\n          isCancel: true\n        });\n      } else if (type === 'removeTable') {\n        this.props.onSelectTableInfo({\n          isCancel: false,\n          chartType: type,\n          tableId: this.props.theTableId\n        });\n      } else if (type === 'addNew') {\n        this.props.onSelectTableInfo({\n          isCancel: false,\n          chartType: type,\n          tableId: this.props.theTableId,\n          capacity: this.state.capacity,\n          length: this.state.length,\n          width: this.state.width\n        });\n      }\n    };\n\n    this.onClickListenerCancel = () => {\n      this.handleTableInfo('tables');\n    };\n\n    this.onClickListenerOK = () => {\n      this.handleTableInfo('addNew');\n    };\n\n    this.onClickListenerRemove = () => {\n      console.log(this.props.theTable);\n\n      if (window.confirm(\"Are you sure you want to delete the table?\")) {\n        this.handleTableInfo('removeTable');\n      }\n    };\n\n    this.onClickCapacityPlus = () => {\n      let prevCapacity = this.state.capacity;\n\n      if (prevCapacity + 1 > 2 * (this.state.length + this.state.width)) {\n        this.setState({\n          capacity: 2 * (this.state.length + this.state.width)\n        });\n      } else {\n        this.setState({\n          capacity: prevCapacity + 1\n        });\n      }\n    };\n\n    this.onClickCapacityMinus = () => {\n      let prevCapacity = this.state.capacity;\n\n      if (prevCapacity === 4) {\n        alert(\"The minimum capacity is 4!\");\n      } else {\n        this.setState({\n          capacity: prevCapacity - 1\n        });\n      }\n    };\n\n    this.onChangeLength = value => {\n      this.setState({\n        length: value\n      });\n    };\n\n    this.onChangeWidth = value => {\n      this.setState({\n        width: value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tables\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, \"Edit Table\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onClickListenerCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"X\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'text-line',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, \"Table #: A\", this.props.theTableId)), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'text-line',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"static-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, \"Seat Capacity: \"), /*#__PURE__*/React.createElement(Icon, {\n      onClick: this.onClickCapacityMinus,\n      type: \"minus-circle\",\n      className: \"input-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"input-icon\",\n      type: \"text\",\n      id: \"capacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, this.state.capacity), /*#__PURE__*/React.createElement(Icon, {\n      onClick: this.onClickCapacityPlus,\n      type: \"plus-circle\",\n      className: \"input-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'text-line',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"static-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \"Table Size: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"static-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, \"Length: \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: 'span-style',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NumericInput, {\n      id: 'length',\n      min: 1,\n      max: 10,\n      value: this.state.length,\n      onChange: this.onChangeLength,\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"static-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, \"Width: \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: 'span-style',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NumericInput, {\n      id: 'width',\n      min: 1,\n      max: 10,\n      value: this.state.width,\n      onChange: this.onChangeWidth,\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onClickListenerRemove,\n      className: \"button-remove\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, \"Remove Table\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onClickListenerOK,\n      className: \"button-ok\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, \"OK\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onClickListenerCancel,\n      className: \"button-cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"Cancel\")));\n  }\n\n}\n\nexport default TableSettings;","map":{"version":3,"sources":["D:/IJ working directory/IdeaProjects/table_and_booking/src/components/TableSettings.js"],"names":["React","PureComponent","Icon","NumericInput","TableSettings","state","capacity","props","theTable","length","width","handleTableInfo","type","onSelectTableInfo","isCancel","chartType","tableId","theTableId","onClickListenerCancel","onClickListenerOK","onClickListenerRemove","console","log","window","confirm","onClickCapacityPlus","prevCapacity","setState","onClickCapacityMinus","alert","onChangeLength","value","onChangeWidth","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,SAAQC,IAAR,QAAmB,MAAnB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AAEA,MAAMC,aAAN,SAA4BH,aAA5B,CAA0C;AAAA;AAAA;AAAA,SACtCI,KADsC,GAC9B;AACJC,MAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,QAD1B;AAEJG,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,QAAX,CAAoBC,MAFxB;AAGJC,MAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,QAAX,CAAoBE;AAHvB,KAD8B;;AAAA,SAOtCC,eAPsC,GAOpBC,IAAI,IAAI;AACtB,UAAIA,IAAI,KAAK,QAAb,EAAuB;AACnB,aAAKL,KAAL,CAAWM,iBAAX,CAA6B;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAA7B;AACH,OAFD,MAEO,IAAIF,IAAI,KAAK,aAAb,EAA4B;AAC/B,aAAKL,KAAL,CAAWM,iBAAX,CAA6B;AACzBC,UAAAA,QAAQ,EAAE,KADe;AAEzBC,UAAAA,SAAS,EAAGH,IAFa;AAGzBI,UAAAA,OAAO,EAAE,KAAKT,KAAL,CAAWU;AAHK,SAA7B;AAKH,OANM,MAMA,IAAIL,IAAI,KAAK,QAAb,EAAuB;AAC1B,aAAKL,KAAL,CAAWM,iBAAX,CAA6B;AACzBC,UAAAA,QAAQ,EAAE,KADe;AAEzBC,UAAAA,SAAS,EAAGH,IAFa;AAGzBI,UAAAA,OAAO,EAAE,KAAKT,KAAL,CAAWU,UAHK;AAIzBX,UAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAJI;AAKzBG,UAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWI,MALM;AAMzBC,UAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK;AANO,SAA7B;AAQH;AACJ,KA1BqC;;AAAA,SA4BtCQ,qBA5BsC,GA4Bd,MAAM;AAC1B,WAAKP,eAAL,CAAqB,QAArB;AACH,KA9BqC;;AAAA,SAgCtCQ,iBAhCsC,GAgClB,MAAM;AACtB,WAAKR,eAAL,CAAqB,QAArB;AACH,KAlCqC;;AAAA,SAoCtCS,qBApCsC,GAoCd,MAAM;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,QAAvB;;AACA,UAAIe,MAAM,CAACC,OAAP,CAAe,4CAAf,CAAJ,EAAkE;AAC9D,aAAKb,eAAL,CAAqB,aAArB;AACH;AACJ,KAzCqC;;AAAA,SA2CtCc,mBA3CsC,GA2ChB,MAAM;AACxB,UAAIC,YAAY,GAAG,KAAKrB,KAAL,CAAWC,QAA9B;;AACA,UAAIoB,YAAY,GAAG,CAAf,GAAmB,KAAK,KAAKrB,KAAL,CAAWI,MAAX,GAAoB,KAAKJ,KAAL,CAAWK,KAApC,CAAvB,EAAmE;AAC/D,aAAKiB,QAAL,CAAc;AACVrB,UAAAA,QAAQ,EAAE,KAAK,KAAKD,KAAL,CAAWI,MAAX,GAAoB,KAAKJ,KAAL,CAAWK,KAApC;AADA,SAAd;AAGH,OAJD,MAIO;AACH,aAAKiB,QAAL,CAAc;AACVrB,UAAAA,QAAQ,EAAEoB,YAAY,GAAG;AADf,SAAd;AAGH;AACJ,KAtDqC;;AAAA,SAwDtCE,oBAxDsC,GAwDf,MAAM;AACzB,UAAIF,YAAY,GAAG,KAAKrB,KAAL,CAAWC,QAA9B;;AACA,UAAIoB,YAAY,KAAK,CAArB,EAAwB;AACpBG,QAAAA,KAAK,CAAC,4BAAD,CAAL;AACH,OAFD,MAEO;AACH,aAAKF,QAAL,CAAc;AACVrB,UAAAA,QAAQ,EAAEoB,YAAY,GAAG;AADf,SAAd;AAGH;AACJ,KAjEqC;;AAAA,SAmEtCI,cAnEsC,GAmEpBC,KAAD,IAAW;AACxB,WAAKJ,QAAL,CAAc;AACVlB,QAAAA,MAAM,EAAEsB;AADE,OAAd;AAGH,KAvEqC;;AAAA,SAyEtCC,aAzEsC,GAyErBD,KAAD,IAAW;AACvB,WAAKJ,QAAL,CAAc;AACVjB,QAAAA,KAAK,EAAEqB;AADG,OAAd;AAGH,KA7EqC;AAAA;;AA+EtCE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,KAAKf,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CADJ,eAKI;AAAK,MAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe,KAAKX,KAAL,CAAWU,UAA1B,CADJ,CADJ,eAKI;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAE,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKW,oBAApB;AAA0C,MAAA,IAAI,EAAC,cAA/C;AAA8D,MAAA,SAAS,EAAE,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAG,MAAA,SAAS,EAAE,YAAd;AAA4B,MAAA,IAAI,EAAC,MAAjC;AAAwC,MAAA,EAAE,EAAC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuD,KAAKvB,KAAL,CAAWC,QAAlE,CAHJ,eAII,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKmB,mBAApB;AAAyC,MAAA,IAAI,EAAC,aAA9C;AAA4D,MAAA,SAAS,EAAE,YAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CALJ,eAYI;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAE,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAK,MAAA,SAAS,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAE,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,MAAA,SAAS,EAAE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAE,QAAlB;AAA4B,MAAA,GAAG,EAAE,CAAjC;AAAoC,MAAA,GAAG,EAAE,EAAzC;AAA6C,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWI,MAA/D;AACc,MAAA,QAAQ,EAAE,KAAKqB,cAD7B;AAEc,MAAA,SAAS,EAAE,WAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CAFJ,eAWI;AAAK,MAAA,SAAS,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAE,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAM,MAAA,SAAS,EAAE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAE,OAAlB;AAA2B,MAAA,GAAG,EAAE,CAAhC;AAAmC,MAAA,GAAG,EAAE,EAAxC;AAA4C,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWK,KAA9D;AACc,MAAA,QAAQ,EAAE,KAAKsB,aAD7B;AAEc,MAAA,SAAS,EAAE,WAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CAXJ,CAZJ,CALJ,eAuCI;AAAK,MAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,OAAO,EAAE,KAAKZ,qBAAtB;AAA6C,MAAA,SAAS,EAAE,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,KAAKD,iBAAtB;AAAyC,MAAA,SAAS,EAAE,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,KAAKD,qBAAtB;AAA6C,MAAA,SAAS,EAAE,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CAvCJ,CADJ;AA+CH;;AA/HqC;;AAkI1C,eAAed,aAAf","sourcesContent":["import React, {PureComponent} from 'react';\r\nimport {Icon} from \"antd\"\r\nimport NumericInput from \"react-numeric-input\"\r\n\r\nclass TableSettings extends PureComponent {\r\n    state = {\r\n        capacity: this.props.theTable.capacity,\r\n        length: this.props.theTable.length,\r\n        width: this.props.theTable.width,\r\n    }\r\n\r\n    handleTableInfo = type => {\r\n        if (type === 'tables') {\r\n            this.props.onSelectTableInfo({isCancel: true});\r\n        } else if (type === 'removeTable') {\r\n            this.props.onSelectTableInfo({\r\n                isCancel: false,\r\n                chartType:  type,\r\n                tableId: this.props.theTableId,\r\n            });\r\n        } else if (type === 'addNew') {\r\n            this.props.onSelectTableInfo({\r\n                isCancel: false,\r\n                chartType:  type,\r\n                tableId: this.props.theTableId,\r\n                capacity: this.state.capacity,\r\n                length: this.state.length,\r\n                width: this.state.width,\r\n            });\r\n        }\r\n    }\r\n\r\n    onClickListenerCancel = () => {\r\n        this.handleTableInfo('tables');\r\n    }\r\n\r\n    onClickListenerOK = () => {\r\n        this.handleTableInfo('addNew');\r\n    }\r\n\r\n    onClickListenerRemove = () => {\r\n        console.log(this.props.theTable);\r\n        if (window.confirm(\"Are you sure you want to delete the table?\")) {\r\n            this.handleTableInfo('removeTable');\r\n        }\r\n    }\r\n\r\n    onClickCapacityPlus = () => {\r\n        let prevCapacity = this.state.capacity;\r\n        if (prevCapacity + 1 > 2 * (this.state.length + this.state.width)) {\r\n            this.setState({\r\n                capacity: 2 * (this.state.length + this.state.width),\r\n            });\r\n        } else {\r\n            this.setState({\r\n                capacity: prevCapacity + 1,\r\n            });\r\n        }\r\n    }\r\n\r\n    onClickCapacityMinus = () => {\r\n        let prevCapacity = this.state.capacity;\r\n        if (prevCapacity === 4) {\r\n            alert(\"The minimum capacity is 4!\");\r\n        } else {\r\n            this.setState({\r\n                capacity: prevCapacity - 1,\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeLength = (value) => {\r\n        this.setState({\r\n            length: value,\r\n        });\r\n    }\r\n\r\n    onChangeWidth = (value) => {\r\n        this.setState({\r\n            width: value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"tables\"}>\r\n                <div className={\"sub-title\"}>\r\n                    <h3 >Edit Table</h3>\r\n                    <button onClick={this.onClickListenerCancel}>X</button>\r\n                </div>\r\n                <div className={\"table-info\"}>\r\n                    <div className={'text-line'}>\r\n                        <p >Table #: A{this.props.theTableId}</p>\r\n                    </div>\r\n\r\n                    <div className={'text-line'}>\r\n                        <p className={\"static-text\"}>Seat Capacity: </p>\r\n                        <Icon onClick={this.onClickCapacityMinus} type=\"minus-circle\" className={\"input-icon\"}/>\r\n                        <p className={\"input-icon\"} type=\"text\" id=\"capacity\">{this.state.capacity}</p>\r\n                        <Icon onClick={this.onClickCapacityPlus} type=\"plus-circle\" className={\"input-icon\"}/>\r\n                    </div>\r\n\r\n                    <div className={'text-line'}>\r\n                        <p className={\"static-text\"}>Table Size: </p>\r\n                        <div className={\"text-col\"}>\r\n                            <p className={\"static-text\"}>Length: </p>\r\n                            <span className={'span-style'}>\r\n                                <NumericInput id={'length'} min={1} max={10} value={this.state.length}\r\n                                              onChange={this.onChangeLength}\r\n                                              className={\"input-box\"}/>\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className={\"text-col\"}>\r\n                            <p className={\"static-text\"}>Width: </p>\r\n                            <span className={'span-style'}>\r\n                                <NumericInput id={'width'} min={1} max={10} value={this.state.width}\r\n                                              onChange={this.onChangeWidth}\r\n                                              className={\"input-box\"}/>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={\"table-info\"}>\r\n                    <button onClick={this.onClickListenerRemove} className={\"button-remove\"}>Remove Table</button>\r\n                    <button onClick={this.onClickListenerOK} className={\"button-ok\"}>OK</button>\r\n                    <button onClick={this.onClickListenerCancel} className={\"button-cancel\"}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableSettings;"]},"metadata":{},"sourceType":"module"}